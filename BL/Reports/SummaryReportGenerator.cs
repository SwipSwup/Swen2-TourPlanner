using System;
using System.IO;
using BL.DTOs;
using QuestPDF.Fluent;
using QuestPDF.Helpers;
using QuestPDF.Infrastructure;
using log4net;
using System.Reflection;

namespace BL.Reports;

public static class SummaryReportGenerator
{
    private static readonly ILog log = LogManager.GetLogger(MethodBase.GetCurrentMethod().DeclaringType);

    public static void Generate(List<SummaryEntryDto> entries, string outputPath)
    {
        try
        {
            log.Info($"Starting summary report generation. Output path: {outputPath}");

            Document document = Document.Create(container =>
            {
                container.Page(page =>
                {
                    page.Size(PageSizes.A4);
                    page.Margin(2, Unit.Centimetre);
                    page.DefaultTextStyle(x => x.FontSize(12));

                    page.Header().Text("Tour Summary Report").FontSize(20).Bold().AlignCenter();

                    page.Content().Table(table =>
                    {
                        table.ColumnsDefinition(columns =>
                        {
                            columns.RelativeColumn(2);
                            columns.RelativeColumn(1);
                            columns.RelativeColumn(1);
                            columns.RelativeColumn(1);
                        });

                        table.Header(header =>
                        {
                            header.Cell().Text("Tour").Bold();
                            header.Cell().Text("Avg Distance (km)").Bold();
                            header.Cell().Text("Avg Time").Bold();
                            header.Cell().Text("Avg Rating").Bold();
                        });

                        foreach (SummaryEntryDto entry in entries)
                        {
                            table.Cell().Text(entry.TourName);
                            table.Cell().Text(entry.AvgDistance.ToString("0.00"));
                            table.Cell().Text(entry.AvgTime.ToString("hh\\:mm"));
                            table.Cell().Text(entry.AvgRating.ToString("0.0"));
                        }
                    });

                    page.Footer().AlignCenter().Text("Generated by TourPlanner").FontSize(10);
                });
            });

            document.GeneratePdf(outputPath);

            log.Info("Summary report generation completed successfully.");
        }
        catch (Exception ex)
        {
            log.Error("Error during summary report generation.", ex);
            throw;
        }
    }
}
